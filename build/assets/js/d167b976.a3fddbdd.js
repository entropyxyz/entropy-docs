"use strict";(self.webpackChunkentropy_core=self.webpackChunkentropy_core||[]).push([[303],{1415:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var s=t(4848),r=t(8453);const a={title:"Rust Testing Interface"},i=void 0,l={id:"reference/rust-testing-interface",title:"Rust Testing Interface",description:"The Rust testing interface (RTI) is a simple way to perform some actions on the Entropy network directly from the command line. It is intended for testing Entropy Core functionality and wasn't designed for end-user or production use.",source:"@site/docs/reference/rust-testing-interface.md",sourceDirName:"reference",slug:"/reference/rust-testing-interface",permalink:"/reference/rust-testing-interface",draft:!1,unlisted:!1,editUrl:"https://github.com/entropyxyz/entropy-docs/edit/main/docs/reference/rust-testing-interface.md",tags:[],version:"current",frontMatter:{title:"Rust Testing Interface"},sidebar:"sidebar",previous:{title:"Command-line interface",permalink:"/reference/cli"}},c={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Environment variables",id:"environment-variables",level:3},{value:"Usage",id:"usage",level:2},{value:"Register",id:"register",level:3},{value:"Usage",id:"usage-1",level:4},{value:"Example",id:"example",level:4},{value:"Status",id:"status",level:3},{value:"Usage",id:"usage-2",level:4},{value:"Example",id:"example-1",level:4},{value:"Sign",id:"sign",level:3},{value:"Usage",id:"usage-3",level:4},{value:"Example",id:"example-2",level:4},{value:"Store program",id:"store-program",level:3},{value:"Usage",id:"usage-4",level:4},{value:"Example",id:"example-3",level:4},{value:"Update programs",id:"update-programs",level:3},{value:"Usage",id:"usage-5",level:4},{value:"Example",id:"example-4",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The Rust testing interface (RTI) is a simple way to perform some actions on the Entropy network directly from the command line. It is intended for testing ",(0,s.jsx)(n.a,{href:"https://github.com/entropyxyz/entropy-core",children:"Entropy Core"})," functionality and wasn't designed for end-user or production use."]}),"\n",(0,s.jsxs)(n.p,{children:["The RTI has no secure private key storage and is only intended for use with test networks. If you want a fully featured interface, ",(0,s.jsx)(n.a,{href:"/reference/cli",children:"use the CLI"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"To run the RTI, you will need the following packages installed:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"OpenSSL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Debian/Ubuntu\nsudo apt install libssl-dev\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# MacOS\nbrew install openssl \n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"pkg-config"})," tool:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Debian/Ubuntu\nsudo apt install pkg-config\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# MacOS\nbrew install pkg-config\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Rust:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Any Unix-based operating system:\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Install the RTI using the pre-build crate through Cargo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cargo install entropy-test-cli\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:"Updating crates.io index\nDownloaded entropy-test-cli v0.1.0\n\n...\n\nInstalled package `entropy-test-cli v0.1.0` (executable `entropy-test-cli`) \n"})}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment variables"}),"\n",(0,s.jsx)(n.p,{children:"You can use the following environment variables to make using the RTI easier:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Example"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENTROPY-MNEMONIC"})}),(0,s.jsx)(n.td,{children:"The mnemonic of the account you'd like to use when interacting with the RTI."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENTROPY_MNEMONIC='choice square dance because into glance hazard return cram host snap deer'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENTROPY_DEVNET"})}),(0,s.jsx)(n.td,{children:"The specific chain-endpoint you want to use when interacting with the RTI."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENTROPY_DEVNET='wss://testnet.entropy.xyz'"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"register",children:"Register"}),"\n",(0,s.jsx)(n.p,{children:"Register an account with the Entropy network and create keyshares."}),"\n",(0,s.jsx)(n.h4,{id:"usage-1",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:"entropy-test-cli register <MNEMONIC> [KEY_VISIBILITY] [PROGRAMS]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'entropy-test-cli --chain-endpoint="wss://testnet.entropy.xyz" register "image point raccoon steak champion clown adult until hamster sun army year"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"status",children:"Status"}),"\n",(0,s.jsx)(n.p,{children:"Display a list of registered Entropy accounts."}),"\n",(0,s.jsx)(n.h4,{id:"usage-2",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:"entropy-test-cli status\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'entropy-test-cli --chain-endpoint="wss://testnet.entropy.xyz" status\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sign",children:"Sign"}),"\n",(0,s.jsx)(n.p,{children:"Ask the network to sign a given message."}),"\n",(0,s.jsx)(n.h4,{id:"usage-3",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:"entropy-test-cli sign <SIGNATURE_VERIFYING_KEY> <MESSAGE> [AUXILARY_DATA]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:'entropy-test-cli --chain-endpoint="wss://testnet.entropy.xyz" sign "0x1ca639d1cae8ea4e4bd37f972999e0e140866614b621bc09950ceb469b987e27" "Good morning."\n'})}),"\n",(0,s.jsx)(n.h3,{id:"store-program",children:"Store program"}),"\n",(0,s.jsx)(n.p,{children:"Store a given program on-chain."}),"\n",(0,s.jsx)(n.h4,{id:"usage-4",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:"entropy-test-cli store-program <MNEMONIC> [PROGRAM_FILE] [CONFIG_INTERFACE_FILE] [AUX_DATA_INTERFACE_FILE]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'entropy-test-cli --chain-endpoint="wss://testnet.entropy.xyz" store-program "image point raccoon steak champion clown adult until hamster sun army year" ./program.wasm ./interface-file.config ./aux-data.config\n'})}),"\n",(0,s.jsx)(n.h3,{id:"update-programs",children:"Update programs"}),"\n",(0,s.jsx)(n.p,{children:"Update the program for a particular account."}),"\n",(0,s.jsx)(n.h4,{id:"usage-5",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-output",children:"entropy-test-cli update-programs <SIGNATURE_VERIFYING_KEY> <MNEMONIC> [PROGRAMS]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'entropy-test-cli --chain-endpoint="wss://testnet.entropy.xyz" update-programs "0x1ca639d1cae8ea4e4bd37f972999e0e140866614b621bc09950ceb469b987e27" "image point raccoon steak champion clown adult until hamster sun army year" ./programs\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);